{"ast":null,"code":"// import React, { useState } from 'react';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n// import axios from 'axios';\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     }\n//     // status: string;\n//     suggestions: Suggestion[];\n// }\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null)\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error) {\n//             console.error('Error finding midpoint:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     // const center = midpoint ? { lat: midpoint.lat, lng: midpoint.lng } : { lat: 0, lng: 0 };\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address1' style={{ display: 'block', marginBottom: '5px' }}>Address 1:</label>\n//                     <input\n//                         type='text'\n//                         id='address1'\n//                         value={address1}\n//                         onChange={(e) => setAddress1(e.target.value)}\n//                         required\n//                         placeholder='Enter first address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address2' style={{ display: 'block', marginBottom: '5px' }}>Address 2:</label>\n//                     <input\n//                         type='text'\n//                         id='address2'\n//                         value={address2}\n//                         onChange={(e) => setAddress2(e.target.value)}\n//                         required\n//                         placeholder='Enter second address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n//                             <GoogleMap\n//                                 mapContainerStyle={mapContainerStyle}\n//                                 center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                                 zoom={13}\n//                             >\n//                                 <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                             </GoogleMap>\n//                         </LoadScript>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;","map":{"version":3,"names":[],"sources":["/workspaces/Halfway/halfway/frontend/src/MidpointFinder.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n// import axios from 'axios';\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     }\n//     // status: string;\n//     suggestions: Suggestion[];\n// }\n\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null)\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error) {\n//             console.error('Error finding midpoint:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     // const center = midpoint ? { lat: midpoint.lat, lng: midpoint.lng } : { lat: 0, lng: 0 };\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address1' style={{ display: 'block', marginBottom: '5px' }}>Address 1:</label>\n//                     <input\n//                         type='text'\n//                         id='address1'\n//                         value={address1}\n//                         onChange={(e) => setAddress1(e.target.value)}\n//                         required\n//                         placeholder='Enter first address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address2' style={{ display: 'block', marginBottom: '5px' }}>Address 2:</label>\n//                     <input\n//                         type='text'\n//                         id='address2'\n//                         value={address2}\n//                         onChange={(e) => setAddress2(e.target.value)}\n//                         required\n//                         placeholder='Enter second address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n//                             <GoogleMap\n//                                 mapContainerStyle={mapContainerStyle}\n//                                 center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                                 zoom={13}\n//                             >\n//                                 <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                             </GoogleMap>\n//                         </LoadScript>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}