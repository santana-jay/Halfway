{"ast":null,"code":"var _jsxFileName = \"/workspaces/Halfway/halfway/frontend/src/MidpointFinder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, Marker, Circle } from '@react-google-maps/api';\nimport axios from 'axios';\nimport AddressAutocomplete from './AddressAutocmplete';\n\n// Using simple input for direct comparison\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SimpleInput = ({\n  label,\n  id,\n  value,\n  onChange,\n  placeholder,\n  required\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: id,\n    style: {\n      display: 'block',\n      marginBottom: '5px'\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    id: id,\n    value: value,\n    onChange: e => onChange(e.target.value),\n    placeholder: placeholder,\n    required: required,\n    style: {\n      width: '100%',\n      padding: '8px',\n      borderRadius: '4px',\n      border: '1px solid #ccc'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n_c = SimpleInput;\nconst MidpointFinder = () => {\n  _s();\n  const [address1, setAddress1] = useState('');\n  const [address2, setAddress2] = useState('');\n  const [radius, setRadius] = useState(5);\n  const [midpoint, setMidpoint] = useState(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // For debugging: track if Google Maps is loaded\n  const [isGoogleLoaded, setIsGoogleLoaded] = useState(!!(window.google && window.google.maps && window.google.maps.places));\n\n  // For testing: Show which type of input we're using\n  const [useAutocomplete, setUseAutocomplete] = useState(true);\n  const mapContainerStyle = {\n    width: '100%',\n    height: '400px'\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      console.log(\"Sending request:\", {\n        address1,\n        address2,\n        radius\n      });\n\n      // Use relative URL with proxy from package.json\n      const res = await axios.post('/api/midpoint/', {\n        address1,\n        address2,\n        radius // Include radius in the request\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"API Response:\", res.data);\n      if (res.data && res.data.midpoint) {\n        setMidpoint(res.data.midpoint);\n        setSuggestions(res.data.suggestions || []);\n      } else {\n        throw new Error(\"Invalid response format\");\n      }\n    } catch (error) {\n      console.error('Error finding midpoint:', error);\n\n      // Extract error message if available\n      let errorMsg = 'Failed to find midpoint. Please try different addresses or try again later.';\n      if (error.response && error.response.data && error.response.data.error) {\n        errorMsg = error.response.data.error;\n      }\n      setError(errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check for Google Maps loading\n  React.useEffect(() => {\n    const checkGoogleMapsLoaded = () => {\n      const isLoaded = !!(window.google && window.google.maps && window.google.maps.places);\n      setIsGoogleLoaded(isLoaded);\n      console.log(\"Google Maps loaded:\", isLoaded);\n      if (!isLoaded) {\n        // Check again in 1 second\n        setTimeout(checkGoogleMapsLoaded, 1000);\n      }\n    };\n    checkGoogleMapsLoaded();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"midpoint-finder\",\n    style: {\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Halfway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Find the perfect place to meet your friends in the middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px',\n        padding: '10px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Debug Info:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Google Maps API loaded: \", isGoogleLoaded ? '✅ Yes' : '❌ No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUseAutocomplete(!useAutocomplete),\n        style: {\n          padding: '5px 10px',\n          marginBottom: '10px'\n        },\n        children: [\"Switch to \", useAutocomplete ? 'Regular Input' : 'Autocomplete']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Currently using: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: useAutocomplete ? 'Autocomplete Input' : 'Regular Input'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          marginBottom: '15px'\n        },\n        children: useAutocomplete ? /*#__PURE__*/_jsxDEV(AddressAutocomplete, {\n          label: \"Address 1:\",\n          id: \"address1\",\n          value: address1,\n          onChange: setAddress1,\n          placeholder: \"Enter first address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(SimpleInput, {\n          label: \"Address 1:\",\n          id: \"address1\",\n          value: address1,\n          onChange: setAddress1,\n          placeholder: \"Enter first address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          marginBottom: '15px'\n        },\n        children: useAutocomplete ? /*#__PURE__*/_jsxDEV(AddressAutocomplete, {\n          label: \"Address 2:\",\n          id: \"address2\",\n          value: address2,\n          onChange: setAddress2,\n          placeholder: \"Enter second address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(SimpleInput, {\n          label: \"Address 2:\",\n          id: \"address2\",\n          value: address2,\n          onChange: setAddress2,\n          placeholder: \"Enter second address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"radius\",\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: [\"Search Radius: \", radius, \" miles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          id: \"radius\",\n          min: \"1\",\n          max: \"20\",\n          value: radius,\n          onChange: e => setRadius(parseInt(e.target.value)),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            fontSize: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"1 mile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20 miles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          width: '100%',\n          padding: '10px',\n          backgroundColor: '#4285F4',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: loading ? 'not-allowed' : 'pointer'\n        },\n        children: loading ? 'Finding Midpoint...' : 'Find Midpoint'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this), midpoint && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Meet in the Middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"midpoint-address\",\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggested meeting location: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), midpoint.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '30px'\n        },\n        children: midpoint && /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: mapContainerStyle,\n          center: {\n            lat: midpoint.lat,\n            lng: midpoint.lng\n          },\n          zoom: 12,\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: midpoint.lat,\n              lng: midpoint.lng\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: {\n              lat: midpoint.lat,\n              lng: midpoint.lng\n            },\n            radius: radius * 1609.34 // Convert miles to meters\n            ,\n            options: {\n              fillColor: '#4285F4',\n              fillOpacity: 0.1,\n              strokeColor: '#4285F4',\n              strokeOpacity: 0.8,\n              strokeWeight: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [\"Things to do within \", radius, \" miles\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), suggestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"No suggestions available for this location.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions-filter\",\n          style: {\n            marginBottom: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '14px',\n              marginBottom: '10px'\n            },\n            children: [\"Showing \", suggestions.length, \" recommendations near \", midpoint.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gap: '15px'\n          },\n          children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-card\",\n            style: {\n              padding: '15px',\n              borderRadius: '8px',\n              boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n              backgroundColor: '#f8f9fa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: 0,\n                marginBottom: '8px'\n              },\n              children: suggestion.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '14px',\n                margin: '0 0 10px 0'\n              },\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tag\",\n              style: {\n                display: 'inline-block',\n                padding: '4px 8px',\n                backgroundColor: '#4285F4',\n                color: 'white',\n                borderRadius: '4px',\n                fontSize: '12px',\n                textTransform: 'capitalize'\n              },\n              children: suggestion.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(MidpointFinder, \"6NjfWo7AoyhPKzlpJrtl60MTlfc=\");\n_c2 = MidpointFinder;\nexport default MidpointFinder;\n\n// import { GoogleMap, LoadScript, Marker, useLoadScript } from '@react-google-maps/api';\n// import axios from 'axios';\n// import Autocomplete from './AutoComplete';\n\n// // Define libraries for Google Maps\n// const libraries: ['places'] = [\"places\"];\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     };\n//     suggestions: Suggestion[];\n// }\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null);\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     const { isLoaded } = useLoadScript({\n//         googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n//         libraries,\n//     });\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             console.log(\"Sending addresses:\", { address1, address2 });\n\n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n\n//             console.log(\"API Response:\", res.data);\n\n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error: any) {\n//             console.error('Error finding midpoint:', error);\n\n//             // Extract error message if available\n//             let errorMsg = 'Failed to find midpoint. Please try different addresses or try again later.';\n//             if (error.response && error.response.data && error.response.data.error) {\n//                 errorMsg = error.response.data.error;\n//             }\n\n//             setError(errorMsg);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     if (!isLoaded) {\n//         return <div>Loading Google Maps...</div>;\n//     }\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <Autocomplete\n//                         label=\"Address 1:\"\n//                         id=\"address1\"\n//                         value={address1}\n//                         onChange={setAddress1}\n//                         required\n//                         placeholder=\"Enter first address\"\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <Autocomplete\n//                         label=\"Address 2:\"\n//                         id=\"address2\"\n//                         value={address2}\n//                         onChange={setAddress2}\n//                         required\n//                         placeholder=\"Enter second address\"\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <GoogleMap\n//                             mapContainerStyle={mapContainerStyle}\n//                             center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                             zoom={13}\n//                         >\n//                             <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                         </GoogleMap>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;\n\n// import React, { useState } from 'react';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n// import axios from 'axios';\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     }\n//     // status: string;\n//     suggestions: Suggestion[];\n// }\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null)\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error) {\n//             console.error('Error finding midpoint:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     // const center = midpoint ? { lat: midpoint.lat, lng: midpoint.lng } : { lat: 0, lng: 0 };\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address1' style={{ display: 'block', marginBottom: '5px' }}>Address 1:</label>\n//                     <input\n//                         type='text'\n//                         id='address1'\n//                         value={address1}\n//                         onChange={(e) => setAddress1(e.target.value)}\n//                         required\n//                         placeholder='Enter first address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address2' style={{ display: 'block', marginBottom: '5px' }}>Address 2:</label>\n//                     <input\n//                         type='text'\n//                         id='address2'\n//                         value={address2}\n//                         onChange={(e) => setAddress2(e.target.value)}\n//                         required\n//                         placeholder='Enter second address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n//                             <GoogleMap\n//                                 mapContainerStyle={mapContainerStyle}\n//                                 center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                                 zoom={13}\n//                             >\n//                                 <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                             </GoogleMap>\n//                         </LoadScript>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;\nvar _c, _c2;\n$RefreshReg$(_c, \"SimpleInput\");\n$RefreshReg$(_c2, \"MidpointFinder\");","map":{"version":3,"names":["React","useState","GoogleMap","Marker","Circle","axios","AddressAutocomplete","jsxDEV","_jsxDEV","Fragment","_Fragment","SimpleInput","label","id","value","onChange","placeholder","required","children","htmlFor","style","display","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","e","target","width","padding","borderRadius","border","_c","MidpointFinder","_s","address1","setAddress1","address2","setAddress2","radius","setRadius","midpoint","setMidpoint","suggestions","setSuggestions","loading","setLoading","error","setError","isGoogleLoaded","setIsGoogleLoaded","window","google","maps","places","useAutocomplete","setUseAutocomplete","mapContainerStyle","height","handleSubmit","preventDefault","console","log","res","post","headers","data","Error","errorMsg","response","useEffect","checkGoogleMapsLoaded","isLoaded","setTimeout","className","maxWidth","margin","textAlign","backgroundColor","onClick","onSubmit","min","max","parseInt","justifyContent","fontSize","disabled","color","cursor","address","center","lat","lng","zoom","position","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","length","gridTemplateColumns","gap","map","suggestion","index","boxShadow","marginTop","name","description","textTransform","_c2","$RefreshReg$"],"sources":["/workspaces/Halfway/halfway/frontend/src/MidpointFinder.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Circle } from '@react-google-maps/api';\nimport axios from 'axios';\nimport AddressAutocomplete from './AddressAutocmplete';\n\n// Using simple input for direct comparison\nconst SimpleInput: React.FC<{\n  label: string;\n  id: string;\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  required?: boolean;\n}> = ({ label, id, value, onChange, placeholder, required }) => (\n  <div>\n    <label \n      htmlFor={id}\n      style={{ display: 'block', marginBottom: '5px' }}\n    >\n      {label}\n    </label>\n    <input\n      type=\"text\"\n      id={id}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n      required={required}\n      style={{ \n        width: '100%', \n        padding: '8px', \n        borderRadius: '4px', \n        border: '1px solid #ccc' \n      }}\n    />\n  </div>\n);\n\ninterface Suggestion {\n    name: string;\n    description: string;\n    type: string;\n}\n\ninterface MidpointResponse {\n    midpoint: {\n        lat: number;\n        lng: number;\n        address: string;\n    };\n    suggestions: Suggestion[];\n}\n\nconst MidpointFinder: React.FC = () => {\n    const [address1, setAddress1] = useState('');\n    const [address2, setAddress2] = useState('');\n    const [radius, setRadius] = useState(5);\n    const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n    const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    \n    // For debugging: track if Google Maps is loaded\n    const [isGoogleLoaded, setIsGoogleLoaded] = useState<boolean>(\n      !!(window.google && window.google.maps && window.google.maps.places)\n    );\n\n    // For testing: Show which type of input we're using\n    const [useAutocomplete, setUseAutocomplete] = useState<boolean>(true);\n\n    const mapContainerStyle = {\n        width: '100%',\n        height: '400px'\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setLoading(true);\n        setError(null);\n\n        try {\n            console.log(\"Sending request:\", { address1, address2, radius });\n            \n            // Use relative URL with proxy from package.json\n            const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n                address1,\n                address2,\n                radius // Include radius in the request\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n            \n            console.log(\"API Response:\", res.data);\n            \n            if (res.data && res.data.midpoint) {\n                setMidpoint(res.data.midpoint);\n                setSuggestions(res.data.suggestions || []);\n            } else {\n                throw new Error(\"Invalid response format\");\n            }\n        } catch (error: any) {\n            console.error('Error finding midpoint:', error);\n            \n            // Extract error message if available\n            let errorMsg = 'Failed to find midpoint. Please try different addresses or try again later.';\n            if (error.response && error.response.data && error.response.data.error) {\n                errorMsg = error.response.data.error;\n            }\n            \n            setError(errorMsg);\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    // Check for Google Maps loading\n    React.useEffect(() => {\n      const checkGoogleMapsLoaded = () => {\n        const isLoaded = !!(window.google && window.google.maps && window.google.maps.places);\n        setIsGoogleLoaded(isLoaded);\n        console.log(\"Google Maps loaded:\", isLoaded);\n        \n        if (!isLoaded) {\n          // Check again in 1 second\n          setTimeout(checkGoogleMapsLoaded, 1000);\n        }\n      };\n      \n      checkGoogleMapsLoaded();\n    }, []);\n\n    return (\n        <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n            <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n            <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n            \n            {/* Debug information */}\n            <div style={{ marginBottom: '10px', padding: '10px', backgroundColor: '#f0f0f0', borderRadius: '4px' }}>\n                <p><strong>Debug Info:</strong></p>\n                <p>Google Maps API loaded: {isGoogleLoaded ? '✅ Yes' : '❌ No'}</p>\n                <button \n                  onClick={() => setUseAutocomplete(!useAutocomplete)}\n                  style={{ padding: '5px 10px', marginBottom: '10px' }}\n                >\n                  Switch to {useAutocomplete ? 'Regular Input' : 'Autocomplete'}\n                </button>\n                <p>Currently using: <strong>{useAutocomplete ? 'Autocomplete Input' : 'Regular Input'}</strong></p>\n            </div>\n\n            <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n                <div className='form-group' style={{ marginBottom: '15px' }}>\n                    {useAutocomplete ? (\n                      <AddressAutocomplete\n                          label=\"Address 1:\"\n                          id=\"address1\"\n                          value={address1}\n                          onChange={setAddress1}\n                          placeholder=\"Enter first address\"\n                          required\n                      />\n                    ) : (\n                      <SimpleInput\n                          label=\"Address 1:\"\n                          id=\"address1\"\n                          value={address1}\n                          onChange={setAddress1}\n                          placeholder=\"Enter first address\"\n                          required\n                      />\n                    )}\n                </div>\n                <div className='form-group' style={{ marginBottom: '15px' }}>\n                    {useAutocomplete ? (\n                      <AddressAutocomplete\n                          label=\"Address 2:\"\n                          id=\"address2\"\n                          value={address2}\n                          onChange={setAddress2}\n                          placeholder=\"Enter second address\"\n                          required\n                      />\n                    ) : (\n                      <SimpleInput\n                          label=\"Address 2:\"\n                          id=\"address2\"\n                          value={address2}\n                          onChange={setAddress2}\n                          placeholder=\"Enter second address\"\n                          required\n                      />\n                    )}\n                </div>\n                <div className='form-group' style={{ marginBottom: '15px' }}>\n                    <label htmlFor='radius' style={{ display: 'block', marginBottom: '5px' }}>\n                        Search Radius: {radius} miles\n                    </label>\n                    <input\n                        type='range'\n                        id='radius'\n                        min='1'\n                        max='20'\n                        value={radius}\n                        onChange={(e) => setRadius(parseInt(e.target.value))}\n                        style={{ width: '100%' }}\n                    />\n                    <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '12px' }}>\n                        <span>1 mile</span>\n                        <span>20 miles</span>\n                    </div>\n                </div>\n                <button \n                    type='submit' \n                    disabled={loading}\n                    style={{ \n                        width: '100%', \n                        padding: '10px', \n                        backgroundColor: '#4285F4', \n                        color: 'white', \n                        border: 'none', \n                        borderRadius: '4px',\n                        cursor: loading ? 'not-allowed' : 'pointer'\n                    }}\n                >\n                    {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n                </button>\n            </form>\n\n            {error && (\n                <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n                    {error}\n                </div>\n            )}\n\n            {midpoint && (\n                <div className='results'>\n                    <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n                    <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n                        <strong>Suggested meeting location: </strong>\n                        {midpoint.address}\n                    </p>\n\n                    <div style={{ marginBottom: '30px' }}>\n                        {midpoint && (\n                            <GoogleMap\n                                mapContainerStyle={mapContainerStyle}\n                                center={{ lat: midpoint.lat, lng: midpoint.lng }}\n                                zoom={12}\n                            >\n                                <Marker \n                                    position={{ lat: midpoint.lat, lng: midpoint.lng }} \n                                />\n                                <Circle\n                                    center={{ lat: midpoint.lat, lng: midpoint.lng }}\n                                    radius={radius * 1609.34} // Convert miles to meters\n                                    options={{\n                                        fillColor: '#4285F4',\n                                        fillOpacity: 0.1,\n                                        strokeColor: '#4285F4',\n                                        strokeOpacity: 0.8,\n                                        strokeWeight: 2,\n                                    }}\n                                />\n                            </GoogleMap>\n                        )}\n                    </div>\n\n                    <h3 style={{ textAlign: 'center' }}>\n                        Things to do within {radius} miles\n                    </h3>\n                    {suggestions.length === 0 ? (\n                        <p style={{ textAlign: 'center' }}>No suggestions available for this location.</p>\n                    ) : (\n                        <>\n                            <div className='suggestions-filter' style={{ marginBottom: '20px', textAlign: 'center' }}>\n                                <p style={{ fontSize: '14px', marginBottom: '10px' }}>\n                                    Showing {suggestions.length} recommendations near {midpoint.address}\n                                </p>\n                            </div>\n                            <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n                                {suggestions.map((suggestion, index) => (\n                                    <div \n                                        key={index} \n                                        className='suggestion-card'\n                                        style={{ \n                                            padding: '15px', \n                                            borderRadius: '8px',\n                                            boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n                                            backgroundColor: '#f8f9fa',\n                                        }}\n                                    >\n                                        <h4 style={{ marginTop: 0, marginBottom: '8px' }}>{suggestion.name}</h4>\n                                        <p style={{ fontSize: '14px', margin: '0 0 10px 0' }}>{suggestion.description}</p>\n                                        <span \n                                            className='tag'\n                                            style={{ \n                                                display: 'inline-block',\n                                                padding: '4px 8px',\n                                                backgroundColor: '#4285F4',\n                                                color: 'white',\n                                                borderRadius: '4px',\n                                                fontSize: '12px',\n                                                textTransform: 'capitalize'\n                                            }}\n                                        >\n                                            {suggestion.type}\n                                        </span>\n                                    </div>\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MidpointFinder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { GoogleMap, LoadScript, Marker, useLoadScript } from '@react-google-maps/api';\n// import axios from 'axios';\n// import Autocomplete from './AutoComplete';\n\n// // Define libraries for Google Maps\n// const libraries: ['places'] = [\"places\"];\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     };\n//     suggestions: Suggestion[];\n// }\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null);\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     const { isLoaded } = useLoadScript({\n//         googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n//         libraries,\n//     });\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             console.log(\"Sending addresses:\", { address1, address2 });\n            \n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n            \n//             console.log(\"API Response:\", res.data);\n            \n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error: any) {\n//             console.error('Error finding midpoint:', error);\n            \n//             // Extract error message if available\n//             let errorMsg = 'Failed to find midpoint. Please try different addresses or try again later.';\n//             if (error.response && error.response.data && error.response.data.error) {\n//                 errorMsg = error.response.data.error;\n//             }\n            \n//             setError(errorMsg);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     if (!isLoaded) {\n//         return <div>Loading Google Maps...</div>;\n//     }\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <Autocomplete\n//                         label=\"Address 1:\"\n//                         id=\"address1\"\n//                         value={address1}\n//                         onChange={setAddress1}\n//                         required\n//                         placeholder=\"Enter first address\"\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <Autocomplete\n//                         label=\"Address 2:\"\n//                         id=\"address2\"\n//                         value={address2}\n//                         onChange={setAddress2}\n//                         required\n//                         placeholder=\"Enter second address\"\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <GoogleMap\n//                             mapContainerStyle={mapContainerStyle}\n//                             center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                             zoom={13}\n//                         >\n//                             <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                         </GoogleMap>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n// import axios from 'axios';\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     }\n//     // status: string;\n//     suggestions: Suggestion[];\n// }\n\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null)\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error) {\n//             console.error('Error finding midpoint:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     // const center = midpoint ? { lat: midpoint.lat, lng: midpoint.lng } : { lat: 0, lng: 0 };\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address1' style={{ display: 'block', marginBottom: '5px' }}>Address 1:</label>\n//                     <input\n//                         type='text'\n//                         id='address1'\n//                         value={address1}\n//                         onChange={(e) => setAddress1(e.target.value)}\n//                         required\n//                         placeholder='Enter first address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address2' style={{ display: 'block', marginBottom: '5px' }}>Address 2:</label>\n//                     <input\n//                         type='text'\n//                         id='address2'\n//                         value={address2}\n//                         onChange={(e) => setAddress2(e.target.value)}\n//                         required\n//                         placeholder='Enter second address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n//                             <GoogleMap\n//                                 mapContainerStyle={mapContainerStyle}\n//                                 center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                                 zoom={13}\n//                             >\n//                                 <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                             </GoogleMap>\n//                         </LoadScript>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;"],"mappings":"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C,YAAA;YAAA,OACd,CAAC;UAAA,GAxBFkF,KAAK;YAAArF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAyBT,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA,eACR,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACU,EAAA,CAxQID,cAAwB;AAAA+E,GAAA,GAAxB/E,cAAwB;AA0Q9B,eAAeA,cAAc;;AA6B7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAD,EAAA,EAAAgF,GAAA;AAAAC,YAAA,CAAAjF,EAAA;AAAAiF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}