{"ast":null,"code":"var _jsxFileName = \"/workspaces/Halfway/halfway/frontend/src/MidpointFinder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport Autocomplete from './AutoComplete';\n\n// Define libraries for Google Maps\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst MidpointFinder = () => {\n  _s();\n  const [address1, setAddress1] = useState('');\n  const [address2, setAddress2] = useState('');\n  const [midpoint, setMidpoint] = useState(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const mapContainerStyle = {\n    width: '100%',\n    height: '400px'\n  };\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: AIzaSyA2MRoYbYdM0j7OKWCoxNoYXfByR9gFsRI,\n    libraries\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      console.log(\"Sending addresses:\", {\n        address1,\n        address2\n      });\n      const res = await axios.post('/api/midpoint/', {\n        address1,\n        address2\n      });\n      console.log(\"API Response:\", res.data);\n      setMidpoint(res.data.midpoint);\n      setSuggestions(res.data.suggestions);\n    } catch (error) {\n      console.error('Error finding midpoint:', error);\n\n      // Extract error message if available\n      let errorMsg = 'Failed to find midpoint. Please try different addresses or try again later.';\n      if (error.response && error.response.data && error.response.data.error) {\n        errorMsg = error.response.data.error;\n      }\n      setError(errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Google Maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"midpoint-finder\",\n    style: {\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Halfway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Find the perfect place to meet your friends in the middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          marginBottom: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          label: \"Address 1:\",\n          id: \"address1\",\n          value: address1,\n          onChange: setAddress1,\n          required: true,\n          placeholder: \"Enter first address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          marginBottom: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          label: \"Address 2:\",\n          id: \"address2\",\n          value: address2,\n          onChange: setAddress2,\n          required: true,\n          placeholder: \"Enter second address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          width: '100%',\n          padding: '10px',\n          backgroundColor: '#4285F4',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: loading ? 'not-allowed' : 'pointer'\n        },\n        children: loading ? 'Finding Midpoint...' : 'Find Midpoint'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this), midpoint && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Meet in the Middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"midpoint-address\",\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggested meeting location: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), midpoint.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: mapContainerStyle,\n          center: {\n            lat: midpoint.lat,\n            lng: midpoint.lng\n          },\n          zoom: 13,\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: midpoint.lat,\n              lng: midpoint.lng\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Things to do in the area:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions\",\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '15px'\n        },\n        children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-card\",\n          style: {\n            padding: '15px',\n            borderRadius: '8px',\n            boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n            backgroundColor: '#f8f9fa'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginTop: 0\n            },\n            children: suggestion.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: suggestion.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            style: {\n              display: 'inline-block',\n              padding: '4px 8px',\n              backgroundColor: '#4285F4',\n              color: 'white',\n              borderRadius: '4px',\n              fontSize: '12px'\n            },\n            children: suggestion.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(MidpointFinder, \"NC1QVttYeeBKcflS9gCbRvFTgag=\", false, function () {\n  return [useLoadScript];\n});\n_c = MidpointFinder;\nexport default MidpointFinder;\n\n// import React, { useState } from 'react';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n// import axios from 'axios';\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     }\n//     // status: string;\n//     suggestions: Suggestion[];\n// }\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null)\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error) {\n//             console.error('Error finding midpoint:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     // const center = midpoint ? { lat: midpoint.lat, lng: midpoint.lng } : { lat: 0, lng: 0 };\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address1' style={{ display: 'block', marginBottom: '5px' }}>Address 1:</label>\n//                     <input\n//                         type='text'\n//                         id='address1'\n//                         value={address1}\n//                         onChange={(e) => setAddress1(e.target.value)}\n//                         required\n//                         placeholder='Enter first address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address2' style={{ display: 'block', marginBottom: '5px' }}>Address 2:</label>\n//                     <input\n//                         type='text'\n//                         id='address2'\n//                         value={address2}\n//                         onChange={(e) => setAddress2(e.target.value)}\n//                         required\n//                         placeholder='Enter second address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n//                             <GoogleMap\n//                                 mapContainerStyle={mapContainerStyle}\n//                                 center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                                 zoom={13}\n//                             >\n//                                 <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                             </GoogleMap>\n//                         </LoadScript>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;\nvar _c;\n$RefreshReg$(_c, \"MidpointFinder\");","map":{"version":3,"names":["React","useState","GoogleMap","Marker","useLoadScript","axios","Autocomplete","jsxDEV","_jsxDEV","libraries","MidpointFinder","_s","address1","setAddress1","address2","setAddress2","midpoint","setMidpoint","suggestions","setSuggestions","loading","setLoading","error","setError","mapContainerStyle","width","height","isLoaded","googleMapsApiKey","AIzaSyA2MRoYbYdM0j7OKWCoxNoYXfByR9gFsRI","handleSubmit","e","preventDefault","console","log","res","post","data","errorMsg","response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","maxWidth","margin","padding","textAlign","onSubmit","marginBottom","label","id","value","onChange","required","placeholder","type","disabled","backgroundColor","color","border","borderRadius","cursor","address","center","lat","lng","zoom","position","display","gridTemplateColumns","gap","map","suggestion","index","boxShadow","marginTop","name","description","fontSize","_c","$RefreshReg$"],"sources":["/workspaces/Halfway/halfway/frontend/src/MidpointFinder.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, useLoadScript } from '@react-google-maps/api';\nimport axios from 'axios';\nimport Autocomplete from './AutoComplete';\n\n// Define libraries for Google Maps\nconst libraries: ['places'] = [\"places\"];\n\ninterface Suggestion {\n    name: string;\n    description: string;\n    type: string;\n}\n\ninterface MidpointResponse {\n    midpoint: {\n        lat: number;\n        lng: number;\n        address: string;\n    };\n    suggestions: Suggestion[];\n}\n\nconst MidpointFinder: React.FC = () => {\n    const [address1, setAddress1] = useState('');\n    const [address2, setAddress2] = useState('');\n    const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n    const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    const mapContainerStyle = {\n        width: '100%',\n        height: '400px'\n    };\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: AIzaSyA2MRoYbYdM0j7OKWCoxNoYXfByR9gFsRI,\n        libraries,\n    });\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setLoading(true);\n        setError(null);\n\n        try {\n            console.log(\"Sending addresses:\", { address1, address2 });\n            \n            const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n                address1,\n                address2\n            });\n            \n            console.log(\"API Response:\", res.data);\n            \n            setMidpoint(res.data.midpoint);\n            setSuggestions(res.data.suggestions);\n        } catch (error: any) {\n            console.error('Error finding midpoint:', error);\n            \n            // Extract error message if available\n            let errorMsg = 'Failed to find midpoint. Please try different addresses or try again later.';\n            if (error.response && error.response.data && error.response.data.error) {\n                errorMsg = error.response.data.error;\n            }\n            \n            setError(errorMsg);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    if (!isLoaded) {\n        return <div>Loading Google Maps...</div>;\n    }\n\n    return (\n        <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n            <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n            <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n            <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n                <div className='form-group' style={{ marginBottom: '15px' }}>\n                    <Autocomplete\n                        label=\"Address 1:\"\n                        id=\"address1\"\n                        value={address1}\n                        onChange={setAddress1}\n                        required\n                        placeholder=\"Enter first address\"\n                    />\n                </div>\n                <div className='form-group' style={{ marginBottom: '15px' }}>\n                    <Autocomplete\n                        label=\"Address 2:\"\n                        id=\"address2\"\n                        value={address2}\n                        onChange={setAddress2}\n                        required\n                        placeholder=\"Enter second address\"\n                    />\n                </div>\n                <button \n                    type='submit' \n                    disabled={loading}\n                    style={{ \n                        width: '100%', \n                        padding: '10px', \n                        backgroundColor: '#4285F4', \n                        color: 'white', \n                        border: 'none', \n                        borderRadius: '4px',\n                        cursor: loading ? 'not-allowed' : 'pointer'\n                    }}\n                >\n                    {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n                </button>\n            </form>\n\n            {error && (\n                <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n                    {error}\n                </div>\n            )}\n\n            {midpoint && (\n                <div className='results'>\n                    <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n                    <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n                        <strong>Suggested meeting location: </strong>\n                        {midpoint.address}\n                    </p>\n\n                    <div style={{ marginBottom: '30px' }}>\n                        <GoogleMap\n                            mapContainerStyle={mapContainerStyle}\n                            center={{ lat: midpoint.lat, lng: midpoint.lng }}\n                            zoom={13}\n                        >\n                            <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n                        </GoogleMap>\n                    </div>\n\n                    <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n                    <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n                        {suggestions.map((suggestion, index) => (\n                            <div \n                                key={index} \n                                className='suggestion-card'\n                                style={{ \n                                    padding: '15px', \n                                    borderRadius: '8px',\n                                    boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n                                    backgroundColor: '#f8f9fa'\n                                }}\n                            >\n                                <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n                                <p>{suggestion.description}</p>\n                                <span \n                                    className='tag'\n                                    style={{ \n                                        display: 'inline-block',\n                                        padding: '4px 8px',\n                                        backgroundColor: '#4285F4',\n                                        color: 'white',\n                                        borderRadius: '4px',\n                                        fontSize: '12px'\n                                    }}\n                                >\n                                    {suggestion.type}\n                                </span>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MidpointFinder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n// import axios from 'axios';\n\n// interface Suggestion {\n//     name: string;\n//     description: string;\n//     type: string;\n// }\n\n// interface MidpointResponse {\n//     midpoint: {\n//         lat: number;\n//         lng: number;\n//         address: string;\n//     }\n//     // status: string;\n//     suggestions: Suggestion[];\n// }\n\n\n// const MidpointFinder: React.FC = () => {\n//     const [address1, setAddress1] = useState('');\n//     const [address2, setAddress2] = useState('');\n//     const [midpoint, setMidpoint] = useState<{ lat: number; lng: number; address: string } | null>(null);\n//     const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState<string | null>(null)\n\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError(null);\n\n//         try {\n//             const res = await axios.post<MidpointResponse>('/api/midpoint/', {\n//                 address1,\n//                 address2\n//             });\n//             setMidpoint(res.data.midpoint);\n//             setSuggestions(res.data.suggestions);\n//         } catch (error) {\n//             console.error('Error finding midpoint:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n\n//     const mapContainerStyle = {\n//         width: '100%',\n//         height: '400px'\n//     };\n\n//     // const center = midpoint ? { lat: midpoint.lat, lng: midpoint.lng } : { lat: 0, lng: 0 };\n\n//     return (\n//         <div className='midpoint-finder' style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n//             <h1 style={{ textAlign: 'center' }}>Halfway</h1>\n//             <p style={{ textAlign: 'center' }}>Find the perfect place to meet your friends in the middle</p>\n\n//             <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address1' style={{ display: 'block', marginBottom: '5px' }}>Address 1:</label>\n//                     <input\n//                         type='text'\n//                         id='address1'\n//                         value={address1}\n//                         onChange={(e) => setAddress1(e.target.value)}\n//                         required\n//                         placeholder='Enter first address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <div className='form-group' style={{ marginBottom: '15px' }}>\n//                     <label htmlFor='address2' style={{ display: 'block', marginBottom: '5px' }}>Address 2:</label>\n//                     <input\n//                         type='text'\n//                         id='address2'\n//                         value={address2}\n//                         onChange={(e) => setAddress2(e.target.value)}\n//                         required\n//                         placeholder='Enter second address'\n//                         style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n//                     />\n//                 </div>\n//                 <button \n//                     type='submit' \n//                     disabled={loading}\n//                     style={{ \n//                         width: '100%', \n//                         padding: '10px', \n//                         backgroundColor: '#4285F4', \n//                         color: 'white', \n//                         border: 'none', \n//                         borderRadius: '4px',\n//                         cursor: loading ? 'not-allowed' : 'pointer'\n//                     }}\n//                 >\n//                     {loading ? 'Finding Midpoint...' : 'Find Midpoint'}\n//                 </button>\n//             </form>\n\n//             {error && (\n//                 <div style={{ color: 'red', marginBottom: '20px', textAlign: 'center' }}>\n//                     {error}\n//                 </div>\n//             )}\n\n//             {midpoint && (\n//                 <div className='results'>\n//                     <h2 style={{ textAlign: 'center' }}>Meet in the Middle</h2>\n//                     <p className='midpoint-address' style={{ textAlign: 'center', marginBottom: '20px' }}>\n//                         <strong>Suggested meeting location: </strong>\n//                         {midpoint.address}\n//                     </p>\n\n//                     <div style={{ marginBottom: '30px' }}>\n//                         <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n//                             <GoogleMap\n//                                 mapContainerStyle={mapContainerStyle}\n//                                 center={{ lat: midpoint.lat, lng: midpoint.lng }}\n//                                 zoom={13}\n//                             >\n//                                 <Marker position={{ lat: midpoint.lat, lng: midpoint.lng }} />\n//                             </GoogleMap>\n//                         </LoadScript>\n//                     </div>\n\n//                     <h3 style={{ textAlign: 'center' }}>Things to do in the area:</h3>\n//                     <div className='suggestions' style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\n//                         {suggestions.map((suggestion, index) => (\n//                             <div \n//                                 key={index} \n//                                 className='suggestion-card'\n//                                 style={{ \n//                                     padding: '15px', \n//                                     borderRadius: '8px',\n//                                     boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n//                                     backgroundColor: '#f8f9fa'\n//                                 }}\n//                             >\n//                                 <h4 style={{ marginTop: 0 }}>{suggestion.name}</h4>\n//                                 <p>{suggestion.description}</p>\n//                                 <span \n//                                     className='tag'\n//                                     style={{ \n//                                         display: 'inline-block',\n//                                         padding: '4px 8px',\n//                                         backgroundColor: '#4285F4',\n//                                         color: 'white',\n//                                         borderRadius: '4px',\n//                                         fontSize: '12px'\n//                                     }}\n//                                 >\n//                                     {suggestion.type}\n//                                 </span>\n//                             </div>\n//                         ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default MidpointFinder;"],"mappings":"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AAA,CA5JID,cAAwB;EAAA,QAaLN,aAAa;AAAA;AAAA+E,EAAA,GAbhCzE,cAAwB;AA8J9B,eAAeA,cAAc;;AA6B7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}